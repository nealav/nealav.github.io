{"version":3,"sources":["webpack:///./src/components/AnchorButton/AnchorButton.module.css","webpack:///./src/pages/css/Home.module.css","webpack:///./src/components/ContactCard/ContactCard.module.css","webpack:///./src/components/AnchorButton/AnchorButton.js","webpack:///./src/components/AnchorButton/index.js","webpack:///./src/components/ContactCard/ContactCard.js","webpack:///./src/components/ContactCard/index.js","webpack:///./src/components/PageLinks/PageLinks.js","webpack:///./src/pages/index.js","webpack:///./src/components/PageLinks/PageLinks.module.css"],"names":["module","exports","colorEnum","primary","classes","secondary","AnchorButton","theme","href","external","title","text","ariaLabel","color","className","Anchor","classNames","anchorButton","button","defaultProps","withTheme","ThemedAnchorButton","ThemedContactCard","data","site","siteMetadata","social","contact","container","container__social","github","icon","faGithub","size","linkedin","aria-label","faLinkedin","container__email","email","faEnvelope","email__icon","displayedEmail","resumeUrl","container__resume","ContactCard","query","render","PageLinks","links","map","to","name","key","config","autoAddCss","Home","allMarkdownRemark","edges","aboutHtml","length","node","html","DefaultLayout","pageTitle","pageDescription","Brand","brand","large","dangerouslySetInnerHTML","__html","contactCard","pageQuery"],"mappings":"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","file":"component---src-pages-index-js-6d3905d9046615dd87ab.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchorButton\":\"AnchorButton-module--anchorButton--1JBGY\",\"primary\":\"AnchorButton-module--primary--1USBH\",\"secondary\":\"AnchorButton-module--secondary--1w4TR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home-module--container--kCRjW\",\"brand\":\"Home-module--brand--2rWof\",\"contactCard\":\"Home-module--contactCard--3xHfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactCard-module--container--4YL94\",\"icon\":\"ContactCard-module--icon--pIjdG\",\"email__icon\":\"ContactCard-module--email__icon--24Mk1\",\"container__social\":\"ContactCard-module--container__social--WE9Rx\",\"container__email\":\"ContactCard-module--container__email--4CQt3\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Anchor from '../Anchor';\n\nimport Theme from '../../proptypes/Theme';\nimport withTheme from '../../hocs/withTheme';\nimport classNames from '../../utils/classNames';\n\nimport classes from './AnchorButton.module.css';\n\nconst colorEnum = {\n  primary: classes.primary,\n  secondary: classes.secondary,\n};\n\nexport function AnchorButton({\n  theme,\n  href,\n  external,\n  title,\n  text,\n  ariaLabel,\n  color,\n  className,\n}) {\n  return (\n    <Anchor\n      href={href}\n      external={external}\n      title={title}\n      ariaLabel={ariaLabel}\n      color={color}\n      className={classNames(\n        classes.anchorButton,\n        colorEnum[color],\n        theme.button,\n        className,\n      )}\n    >\n      { text }\n    </Anchor>\n  );\n}\n\nAnchorButton.propTypes = {\n  theme: Theme.isRequired,\n  href: PropTypes.string.isRequired,\n  external: PropTypes.bool,\n  title: PropTypes.string,\n  text: PropTypes.string.isRequired,\n  ariaLabel: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n};\n\nAnchorButton.defaultProps = {\n  external: false,\n  title: null,\n  ariaLabel: null,\n  color: 'primary',\n  className: '',\n};\n\nexport default withTheme(AnchorButton);\n","import ThemedAnchorButton from './AnchorButton';\n\nexport default ThemedAnchorButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faGithub,\n  faLinkedin,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-regular-svg-icons';\n\nimport Theme from '../../proptypes/Theme';\nimport withTheme from '../../hocs/withTheme';\nimport classNames from '../../utils/classNames';\n\nimport Anchor from '../Anchor';\nimport AnchorButton from '../AnchorButton';\nimport classes from './ContactCard.module.css';\n\nfunction ContactCard({\n  theme,\n  data = {},\n}) {\n  const {\n    site: {\n      siteMetadata: {\n        social = {},\n        contact = {},\n      } = {},\n    } = {},\n  } = data;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.container__social}>\n        <Anchor\n          title={`${social.github} on GitHub`}\n          href={`https://github.com/${social.github}`}\n          external\n          ariaLabel=\"GitHub profile\"\n        >\n          <FontAwesomeIcon\n            icon={faGithub}\n            className={classes.icon}\n            size=\"lg\"\n          />\n        </Anchor>\n        <Anchor\n          title={`${social.linkedin} on LinkedIn`}\n          href={`https://linkedin.com/in/${social.linkedin}`}\n          external\n          aria-label=\"LinkedIn profile\"\n        >\n          <FontAwesomeIcon\n            icon={faLinkedin}\n            className={classes.icon}\n            size=\"lg\"\n          />\n        </Anchor>\n      </div>\n      <div className={classes.container__email}>\n        <Anchor\n          href={`mailto:${contact.email}`}\n          external\n        >\n          <FontAwesomeIcon\n            icon={faEnvelope}\n            className={`${classes.icon} ${classes.email__icon}`}\n          />\n          { contact.displayedEmail }\n        </Anchor>\n      </div>\n      <AnchorButton\n        href={contact.resumeUrl}\n        external\n        text=\"resume\"\n        color=\"secondary\"\n        className={classNames(classes.container__resume, theme.button)}\n      />\n    </div>\n  );\n}\n\nContactCard.propTypes = {\n  theme: Theme.isRequired,\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        contact: PropTypes.shape({\n          email: PropTypes.string.isRequired,\n          displayedEmail: PropTypes.string.isRequired,\n          resumeUrl: PropTypes.string.isRequired,\n        }).isRequired,\n        social: PropTypes.shape({\n          github: PropTypes.string.isRequired,\n          linkedin: PropTypes.string.isRequired,\n        }).isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nconst ThemedContactCard = withTheme(ContactCard);\n\nexport default function ContactCardWithData() {\n  return (\n    <StaticQuery\n      query={\n        graphql`\n          query {\n            site {\n              siteMetadata {\n                contact {\n                  name,\n                  email,\n                  displayedEmail,\n                  resumeUrl,\n                },\n                social {\n                  github,\n                  linkedin,\n                }\n              }\n            }\n          }\n        `\n      }\n      render={data => <ThemedContactCard data={data} />}\n    />\n  );\n}\n","import ContactCard from './ContactCard';\n\nexport default ContactCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AnchorButton from '../AnchorButton';\n\nimport classes from './PageLinks.module.css';\n\nfunction PageLinks({ links }) {\n  return (\n    <div\n      className={`${classes.container}`}\n    >\n      {links.map(({ to, name }) => (\n        <AnchorButton\n          key={to}\n          href={to}\n          color=\"primary\"\n          text={name}\n        />\n      ))}\n    </div>\n  );\n}\n\nPageLinks.propTypes = {\n  links: PropTypes.arrayOf(PropTypes.shape({\n    to: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default PageLinks;\n","import { graphql } from 'gatsby';\nimport { config } from '@fortawesome/fontawesome-svg-core';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DefaultLayout from '../layouts/DefaultLayout';\n\nimport Brand from '../components/Brand';\nimport ContactCard from '../components/ContactCard';\nimport PageLinks from '../components/PageLinks';\n\nimport classes from './css/Home.module.css';\n\nfunction Home({\n  data = {},\n}) {\n  const {\n    allMarkdownRemark: {\n      edges = [],\n    } = {},\n    site: {\n      siteMetadata: {\n        title,\n      } = {},\n    } = {},\n  } = data;\n\n  const pageDescription = 'A personal website';\n  const pageLinks = [{\n    to: '/blog',\n    name: 'blog',\n  }, {\n    to: '/projects',\n    name: 'projects',\n  }];\n  const aboutHtml = edges.length ? edges[0].node.html : null;\n\n  return (\n    <DefaultLayout\n      pageTitle={title}\n      pageDescription={pageDescription}\n    >\n      <div className={classes.container}>\n        <header>\n          <Brand\n            className={classes.brand}\n            large\n          />\n          <div\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: aboutHtml }}\n          />\n          <PageLinks links={pageLinks} />\n        </header>\n        <main className={classes.contactCard}>\n          <ContactCard />\n        </main>\n      </div>\n    </DefaultLayout>\n  );\n}\n\nHome.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n          html: PropTypes.string.isRequired,\n        }).isRequired,\n      })).isRequired,\n    }).isRequired,\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\n// CSS for Font Awesome is explicitly loaded to ensure\n// it gets loaded before SVG elements are rendered\nconfig.autoAddCss = false;\n\nexport default Home;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/about\\/about.md/\" } }\n    ) {\n      edges {\n        node {\n          html\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title,\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageLinks-module--container--2TSdt\"};"],"sourceRoot":""}